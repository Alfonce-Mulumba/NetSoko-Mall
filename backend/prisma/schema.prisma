generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int       @id @default(autoincrement())
  name                   String
  email                  String    @unique
  phone                  String?
  password               String
  role                   String    @default("customer")
  is_verified            Boolean   @default(false)
  verification_code      Int?
  verification_expires   DateTime?
  reset_password_token   String?
  reset_password_expires DateTime?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt

  orders Order[]
  cart   Cart[]
  complaint Complaint[]
  deliveryAddress DeliveryAddress[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  discount    Float?   @default(0) // % discount e.g. 10 = 10%
  stock       Int
  category    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  images     ProductImage[]
  sizes      ProductSize[]
  orderItems OrderItem[]
  cart       Cart[] // âœ… add this line (opposite of Cart.product)
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model ProductSize {
  id        Int     @id @default(autoincrement())
  size      String
  stock     Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Cart {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model DeliveryAddress {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  address   String
  city      String
  country   String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders    Order[]
}

model Order {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          Int
  status          String           @default("pending")
  deliveryAddress DeliveryAddress? @relation(fields: [deliveryAddressId], references: [id])
  deliveryAddressId Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  orderItems      OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}
model Complaint {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  message   String
  createdAt DateTime @default(now())
  status    String   @default("open") // open, in_progress, resolved
}
