generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int               @id @default(autoincrement())
  email                  String            @unique
  phone                  String?
  password               String
  role                   String            @default("customer")
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  is_verified            Boolean           @default(false)
  name                   String
  verification_code      Int?
  verification_expires   DateTime?
  reset_password_expires DateTime?
  reset_password_token   String?
  cart                   Cart[]
  complaint              Complaint[]
  deliveryAddress        DeliveryAddress[]
  orders                 Order[]
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int            @default(0)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  category    String?
  hot         Boolean        @default(false)
  discount    Int?
  cart        Cart[]
  orderItems  OrderItem[]
  images      ProductImage[]
  sizes       ProductSize[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductSize {
  id        Int     @id @default(autoincrement())
  size      String
  stock     Int
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int
  productId Int
  price     Float
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model DeliveryAddress {
  id        Int      @id @default(autoincrement())
  userId    Int
  address   String
  city      String
  country   String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDefault Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  orders    Order[]
}

model Order {
  id                Int              @id @default(autoincrement())
  userId            Int
  status            String           @default("pending")
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  deliveryAddressId Int?
  deliveryAddress   DeliveryAddress? @relation(fields: [deliveryAddressId], references: [id])
  user              User             @relation(fields: [userId], references: [id])
  orderItems        OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Complaint {
  id        Int      @id @default(autoincrement())
  userId    Int
  message   String
  createdAt DateTime @default(now())
  status    String   @default("open")
  isRead    Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
}
